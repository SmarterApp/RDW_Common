package org.opentestsystem.rdw.archive;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * Configuration for archive service. To use do something like:<pre>
 * {@literal @}Import(ArchiveConfiguration.class)
 *  public class Application { ... }
 * </pre>
 * To configure, add the following to your application.yml file:<pre>
 * archive:
 *   root: s3://bucket/
 *
 * # there needs to be a default aws region configured
 * cloud:
 *   aws:
 *     region:
 *       auto: false
 *       static: us-west-2
 *     # disable CloudFormation stuff
 *     stack:
 *       auto: false
 *     credentials:
 *       instance-profile: false
 *       accessKey: yourAccessKey
 *       secretKey: yourSecretKey
 * </pre>
 *
 * @see LocalArchiveService
 * @see S3ArchiveService
 */
@Configuration
public class ArchiveConfiguration {

    /**
     * Create {@link ArchiveService} based on configuration setting of "archive.root".
     * The root is expected to be of the form "file:///tmp/" or "s3://bucket"
     *
     * @param archiveRoot configured archive root
     * @return new created {@link ArchiveService}
     * @throws IllegalArgumentException if root is invalid or not found
     */
    @Bean
    public ArchiveService archiveService(@Value("${archive.root:file:///tmp/}") final String archiveRoot) {
        // this could be more elegant (e.g. use a Condition) but for now ...
        if (LocalArchiveService.validRoot(archiveRoot)) {
            return new LocalArchiveService(archiveRoot);
        }
        if (S3ArchiveService.validRoot(archiveRoot)) {
            return new S3ArchiveService(archiveRoot);
        }
        throw new IllegalArgumentException("Invalid archive root " + archiveRoot);
    }
}
