package org.opentestsystem.rdw.archive;

import java.io.InputStream;
import java.util.Properties;

/**
 * A service for reading and writing resources in an archive.
 */
public interface ArchiveService {

    /**
     * Byte array version of writeResource; intended for small resources; retained for legacy use.
     *
     * @param location unique (relative) location for content, e.g. "EXAM/4F/0A/4F0A1245"
     * @param content content to write
     * @param properties optional content properties to store
     */
    void writeResource(String location, byte[] content, Properties properties);

    /**
     * Write the resource using the given location as the unique id.
     * Store the resource properties if provided. As a convention, property keys look
     * like HTTP headers, for example "content-type".
     *
     * @param location unique (relative) location for content, e.g. "EXAM/4F/0A/4F0A1245"
     * @param is content stream to write
     * @param properties optional content properties to store
     */
    void writeResource(String location, InputStream is, Properties properties);

    /**
     * Read a resource identified by the unique id.
     *
     * @param location unique (relative) location for content, e.g. "EXAM/4F/0A/4F0A1245"
     * @return content, null if not found
     */
    byte[] readResource(String location);

    /**
     * Read the properties for the given resource location.
     *
     * @param location unique (relative) location for content
     * @return content properties, may be empty, won't be null
     */
    Properties readProperties(String location);
}
