package org.opentestsystem.rdw.archive;

import org.springframework.core.env.PropertyResolver;

/**
 * Interface for creating {@link ArchiveService} based on root value.
 */
public interface ArchiveServiceFactory {

    /**
     * Create {@link ArchiveService} based on properties. The properties must contain
     * the archive root setting; other required properties depend on the root protocol:<ul>
     *     <li>file - no other properties required</li>
     *     <li>S3 - must specify region, access key, secret key</li>
     * </ul>
     * The prefix is used to qualify the properties.
     * <p>
     * Example local file configuration, prefix is local-archive:<pre>
     * local-archive.root=file:///tmp/
     * </pre>
     * Example S3 configuration, prefix is archive2:<pre>
     * archive2.root=s3://MyBucket
     * archive2.cloud.aws.region.auto=true
     * OR
     * archive2.cloud.aws.region.auto=false
     * archive2.cloud.aws.region.static=us-west-2
     * archive2.cloud.aws.credentials.accessKey=MyAccessKey
     * archive2.cloud.aws.credentials.secretKey=MySecretKey
     * </pre>
     *
     * @param propertyResolver property resolver
     * @param prefix optional property prefix, e.g. "archive."; may be null
     * @return newly created archive service
     * @throws IllegalArgumentException if any invalid or missing properties
     */
    ArchiveService createArchiveService(PropertyResolver propertyResolver, String prefix);
}
