package org.opentestsystem.rdw.archive;

import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.core.env.Environment;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringRunner;

/**
 * This suite constructs multiple S3 archives to see if the separate amazon S3 clients
 * interfere with each other. Not really a test as much as a debugging aid ...
 *
 * @deprecated remove it when removing {@link ArchiveServiceFactory}
 */
@RunWith(SpringRunner.class)
@TestPropertySource(properties = {
        "archive[0].root=s3://BucketOne",
        "archive[0].cloud.aws.credentials.accessKey: AccessKeyOne",
        "archive[0].cloud.aws.credentials.secretKey: SecretKeyOne",
        "archive[0].cloud.aws.region.static: us-west-2",
        "archive[1].root=s3://BucketTwo",
        "archive[1].cloud.aws.credentials.accessKey: AccessKeyTwo",
        "archive[1].cloud.aws.credentials.secretKey: SecretKeyTwo",
        "archive[1].cloud.aws.region.static: us-east-1"
})
@Import(value = {ArchiveConfiguration.class})
@Ignore("need credentials")
@Deprecated
public class MultiS3ArchiveServiceIT {

    @Autowired
    private Environment env;

    @Autowired
    private ArchiveServiceFactory factory;

    @Test
    public void itShouldCreateSeparateClients() {
        final ArchiveService serviceOne = factory.createArchiveService(env, "archive[0].");
        final ArchiveService serviceTwo = factory.createArchiveService(env, "archive[1].");
        System.out.println(serviceOne.toString());
        System.out.println(serviceTwo.toString());
    }
}