buildscript {
  repositories {
    mavenLocal()
    jcenter()
  }
  dependencies {
    classpath("io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE")
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.18.RELEASE")
  }
}

apply plugin: 'io.spring.dependency-management'

allprojects {
    group = 'org.opentestsystem.rdw.common'
    version = '1.4.0-SNAPSHOT'

    apply plugin: 'idea'

    if (project.hasProperty("buildNumber")) {
      project.setVersion(project.version.toString().replaceAll("SNAPSHOT", "${buildNumber}"))
    }
}

subprojects {
  apply plugin: "java"
  apply plugin: "maven"
  apply plugin: "jacoco"
  apply plugin: 'io.spring.dependency-management'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  repositories {
      mavenCentral()
  }

  dependencyManagement {
    dependencies {
      // commonly used libraries
      dependency 'com.google.code.gson:gson:2.8.5'
      dependency 'com.google.guava:guava:27.0.1-jre'
      dependency 'commons-io:commons-io:2.6'
      dependency 'org.apache.commons:commons-csv:1.6'
      dependency 'org.apache.commons:commons-lang3:3.8.1'
      dependency 'org.apache.commons:commons-text:1.6'
      dependency 'org.slf4j:slf4j-api:1.7.25'

      // commonly used test libraries
      dependency 'junit:junit:4.12'
      dependency 'org.assertj:assertj-core:3.11.1'
      dependency 'org.mockito:mockito-core:2.23.4'
      dependency 'org.mockito:mockito-inline:2.23.4'

      // Woodstox STAX2 XML stream processing API and required
      // Sun Multi-Schema Validation libraries
      dependency 'org.codehaus.woodstox:stax2-api:4.1'
      dependency 'msv:msv:20050913'
      dependency 'msv:xsdlib:20050913'
      dependency 'xerces:xercesImpl:2.11.0'
    }
    imports {
      // make springframework versions consistent with other projects in the RDW suite
      mavenBom 'org.springframework.boot:spring-boot-dependencies:1.5.18.RELEASE'
      mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Edgware.SR5'
    }
  }

  dependencies {
    compile 'org.slf4j:slf4j-api'

    testCompile 'junit:junit'
    testCompile 'org.mockito:mockito-core'
    testCompile 'org.assertj:assertj-core'
  }

  test.finalizedBy jacocoTestReport

  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives sourcesJar
    archives javadocJar
  }
}
  

