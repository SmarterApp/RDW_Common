package org.opentestsystem.rdw.common.model.subject;

import java.util.List;

/**
 * This class represents "Claim" and/or "Scorable Claim" in the reporting system for the parent Subject.
 * A claim may be scorable, organizational, or both. But not neither.
 */
public class Claim extends Scorable {
    private boolean scorable = true;
    private boolean organizational = true;
    private List<Target> targets;

    public Builder copy() {
        return builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    /**
     * @return True if this alt/claim will be referenced as an exam/TRT score
     */
    public boolean isScorable() {
        return scorable;
    }

    /**
     * @return True if this alt/claim will be referenced by assessment items
     */
    public boolean isOrganizational() {
        return organizational;
    }

    /**
     * The targets contained by this organizational alt/claim.
     * May be null for non-organizational claims.
     *
     * @return The targets for this organizational alt/claim.
     */
    public List<Target> getTargets() {
        return targets;
    }

    public static class Builder extends Scorable.Builder<Builder, Claim> {
        private boolean scorable = true;
        private boolean organizational = true;
        private List<Target> targets;

        @Override
        protected Claim createInstance() {
            return new Claim();
        }

        @Override
        public Claim build() {
            final Claim claim = super.build();
            claim.targets = targets;
            claim.scorable = this.scorable;
            claim.organizational = organizational;
            return claim;
        }

        @Override
        public Builder copy(final Claim container) {
            super.copy(container);
            this.targets = container.getTargets();
            this.scorable = container.isScorable();
            this.organizational = container.isOrganizational();
            return this;
        }

        public Builder targets(final List<Target> targets) {
            this.targets = targets;
            return this;
        }

        public Builder scorable(final boolean scorable) {
            this.scorable = scorable;
            return this;
        }

        public Builder organizational(final boolean organizational) {
            this.organizational = organizational;
            return this;
        }
    }
}
