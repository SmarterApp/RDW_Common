package org.opentestsystem.rdw.common.model.subject;

import java.io.InputStream;

/**
 * This class contains subject definitions scoped by assessment type.
 * NOTE {@link #getCode()} must reference one of the available assessment
 * types ("iab", "ica" or "sum")
 */
public class SubjectAssessmentType extends NamedCodedEntity {

    private String longName;
    private Boolean targetReport;
    private PerformanceLevels performanceLevels;
    private ClaimScoring claimScoring;

    /**
     * @return Optional long version of the assessment type's display name, may be null
     */
    public String getLongName() {
        return longName;
    }

    /**
     * Although this may be null, it will not be when created from XML.
     * It is Boolean (instead of primitive boolean) because it is optional in
     * the XML schema. However, it has well-defined default values that are set
     * by the deserialization process.
     *
     * @return flag to enable/disable target report
     */
    public Boolean isTargetReport() {
        return targetReport;
    }

    /**
     * @return The overall performance levels for assessments of this assessment type
     */
    public PerformanceLevels getPerformanceLevels() {
        return performanceLevels;
    }

    /**
     * The claim scoring definitions for assessments of this assessment type.
     *
     * @return The claim score definitions for this assessment type, or NULL if this
     * assessment type does not support claim scores.
     */
    public ClaimScoring getClaimScoring() {
        return claimScoring;
    }

    /**
     * This is a hook to allow post-processing.
     *
     * @param targetReport new targetReport value
     * @see XmlSubjectSerializationService#parseSubject(InputStream)
     */
    void setTargetReport(final Boolean targetReport) {
        this.targetReport = targetReport;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends NamedCodedEntity.Builder<Builder, SubjectAssessmentType> {
        private String longName;
        private Boolean targetReport;
        private PerformanceLevels performanceLevels;
        private ClaimScoring claimScoring;

        @Override
        protected SubjectAssessmentType createInstance() {
            return new SubjectAssessmentType();
        }

        @Override
        public SubjectAssessmentType build() {
            final SubjectAssessmentType assessmentType = super.build();
            assessmentType.longName = longName;
            assessmentType.targetReport = targetReport;
            assessmentType.performanceLevels = performanceLevels;
            assessmentType.claimScoring = claimScoring;
            return assessmentType;
        }

        public Builder longName(final String longName) {
            this.longName = longName;
            return this;
        }

        public Builder targetReport(final Boolean targetReport) {
            this.targetReport = targetReport;
            return this;
        }

        public Builder performanceLevels(final PerformanceLevels performanceLevels) {
            this.performanceLevels = performanceLevels;
            return this;
        }

        public Builder claimScoring(final ClaimScoring claimScoring) {
            this.claimScoring = claimScoring;
            return this;
        }
    }
}
