package org.opentestsystem.rdw.multitenant.messaging;

import org.opentestsystem.rdw.multitenant.TenantContextHolder;
import org.springframework.messaging.Message;
import org.springframework.messaging.MessageChannel;
import org.springframework.messaging.support.ChannelInterceptorAdapter;

/**
 * {@link ChannelInterceptorAdapter} implementation that maps
 * an incoming request to a tenantId and places it in the
 * {@link TenantContextHolder}
 */
public class TenantChannelInterceptor extends ChannelInterceptorAdapter {

    private final TenantMessageRequestResolver resolver;

    public TenantChannelInterceptor(TenantMessageRequestResolver resolver) {
        this.resolver = resolver;
    }

    @Override
    public Message<?> preSend(Message<?> message, MessageChannel channel) {
        final String tenantId = resolver.resolveTenantId(message);
        TenantContextHolder.setTenantId(tenantId);
        return message;
    }

    @Override
    public void postSend(Message<?> message, MessageChannel channel, boolean sent) {
        TenantContextHolder.clear();
    }

}
