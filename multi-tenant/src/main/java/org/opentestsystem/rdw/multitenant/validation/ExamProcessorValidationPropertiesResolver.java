package org.opentestsystem.rdw.multitenant.validation;

import org.opentestsystem.rdw.multitenant.TenantKeyResolver;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElements;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.List;
import java.util.Optional;

/**
 * Tenant specific {@link ExamProcessorValidationProperties} assumes tenant configuration
 * is under main configuration in "tenants" namespace
 */
public class ExamProcessorValidationPropertiesResolver implements ExamProcessorValidationProperties {

    private static final Logger logger = LoggerFactory.getLogger(ExamProcessorValidationPropertiesResolver.class);

    private final TenantKeyResolver tenantKeyResolver;
    private final ExamProcessorValidationPropertiesRoot propertiesRoot;

    public ExamProcessorValidationPropertiesResolver(TenantKeyResolver tenantKeyResolver,
                                                     ExamProcessorValidationPropertiesRoot propertiesRoot) {
        this.tenantKeyResolver = tenantKeyResolver;
        this.propertiesRoot = propertiesRoot;
        logger.debug("ExamProcessorValidationPropertiesRoot: {}", propertiesRoot);
    }

    @Override
    public List<String> getRequiredDataElements() {
        return getExamProcessorValidationPropertiesTenant()
                .map(ExamProcessorValidationPropertiesTenant::getRequiredDataElements)
                .orElse(propertiesRoot.getRequiredDataElements());
    }

    private Optional<ExamProcessorValidationPropertiesTenant> getExamProcessorValidationPropertiesTenant() {
        return tenantKeyResolver.getTenantKey()
                .flatMap(k -> Optional.ofNullable(propertiesRoot.getTenants().get(k)));
    }

}
