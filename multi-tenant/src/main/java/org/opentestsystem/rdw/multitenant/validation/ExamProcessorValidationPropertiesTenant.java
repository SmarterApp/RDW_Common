package org.opentestsystem.rdw.multitenant.validation;

import com.fasterxml.jackson.annotation.JsonAlias;
import com.google.common.base.Objects;
import com.google.common.collect.Lists;

import java.util.ArrayList;
import java.util.List;

/**
 * POJO for reading/writing exam processor validation properties
 * <p>
 * The JsonAlias annotations make it so it will read properties using rules
 * that mimic Spring's relaxed binding.
 * </p>
 */
public class ExamProcessorValidationPropertiesTenant implements ExamProcessorValidationProperties {

    private ArrayList<String> requiredDataElements = new ArrayList<>();

    @Override
    public List<String> getRequiredDataElements() {
        return requiredDataElements;
    }

    @JsonAlias({"required-data-elements", "required_data_elements"})
    public void setRequiredDataElements(List<String> requiredDataElements) {
        this.requiredDataElements = Lists.newArrayList(requiredDataElements);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ExamProcessorValidationPropertiesTenant)) return false;
        ExamProcessorValidationPropertiesTenant that = (ExamProcessorValidationPropertiesTenant) o;
        return Objects.equal(requiredDataElements, that.requiredDataElements);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(requiredDataElements);
    }
}