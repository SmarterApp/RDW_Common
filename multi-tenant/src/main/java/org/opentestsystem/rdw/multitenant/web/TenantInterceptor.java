package org.opentestsystem.rdw.multitenant.web;

import org.opentestsystem.rdw.multitenant.TenantContextHolder;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * {@link HandlerInterceptorAdapter} implementation that maps
 * an incoming request to a tenantId and places it in the
 * {@link TenantContextHolder}
 */
public class TenantInterceptor extends HandlerInterceptorAdapter {

    private final TenantWebRequestResolver resolver;

    public TenantInterceptor(TenantWebRequestResolver resolver) {
        this.resolver = resolver;
    }

    /**
     * Set the tenant context, always returns {@code true}.
     */
    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {
        final String tenant = resolver.resolveTenantId(request);
        TenantContextHolder.setTenantId(tenant);
        return true;
    }

    /**
     * Clear the tenant context
     */
    @Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {
        TenantContextHolder.clear();
    }

}
