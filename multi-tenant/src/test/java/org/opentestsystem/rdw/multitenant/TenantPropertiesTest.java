package org.opentestsystem.rdw.multitenant;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest
@ActiveProfiles(profiles = {"tenant"})
@EnableConfigurationProperties
public class TenantPropertiesTest {

    @Autowired
    private TenantProperties tenantProperties;

    @Test
    public void tenantPropertiesShouldFindAllTenants() {
        assertThat(tenantProperties).isNotNull();
        assertThat(tenantProperties.getTenants()).isNotNull();
        assertThat(tenantProperties.getTenants().size()).isEqualTo(2);
    }

    @Test
    public void tenantPropertiesShouldFindTenantsById() {
        assertThat(tenantProperties.findTenantById("CA"))
                .isNotNull();
        assertThat(tenantProperties.findTenantById("CA").get().getKey())
                .isEqualTo("CA");
        assertThat(tenantProperties.findTenantById("CA").get().getName())
                .isEqualTo("California");
        assertThat(tenantProperties.findTenantById("CA").get().getDescription())
                .isEqualTo("Some Descriptive Text For CA");
        assertThat(tenantProperties.findTenantById("NV"))
                .isNotNull();
        assertThat(tenantProperties.findTenantById("NV").get().getKey())
                .isEqualTo("NVX");
        assertThat(tenantProperties.findTenantById("NV").get().getName())
                .isEqualTo("Nevada");
        assertThat(tenantProperties.findTenantById("NV").get().getDescription())
                .isEqualTo("Some Descriptive Text For NV");
    }

    @Test
    public void tenantPropertiesShouldFindTenantIdByKey() {
        assertThat(tenantProperties.findTenantKeyById("CA")).isPresent();
        assertThat(tenantProperties.findTenantKeyById("CA").get()).isEqualTo("CA");
        assertThat(tenantProperties.findTenantKeyById("NV")).isPresent();
        assertThat(tenantProperties.findTenantKeyById("NV").get()).isEqualTo("NVX");
    }

    @Configuration
    static class Config {
        @Bean
        @ConfigurationProperties(prefix = "tenant-properties")
        TenantProperties tenantProperties() {
            return new TenantProperties();
        }
    }
}
