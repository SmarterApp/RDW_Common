package org.opentestsystem.rdw.script.publishing;

import com.google.common.base.MoreObjects;
import java.time.Instant;
import java.util.List;

import static com.google.common.collect.ImmutableList.copyOf;
import static com.google.common.collect.ImmutableList.of;

/**
 * Represents a published pipeline artifact
 */
public class PublishedPipeline {

    private String pipelineCode;
    private String version;
    private List<PublishedScript> scripts;
    private Instant published;
    private String publishedBy;

    public String getPipelineCode() {
        return pipelineCode;
    }

    public String getVersion() {
        return version;
    }

    public List<PublishedScript> getScripts() {
        return scripts;
    }

    public Instant getPublished() {
        return published;
    }

    public String getPublishedBy() {
        return publishedBy;
    }

    public String toString() {
        return MoreObjects.toStringHelper(this)
                .add("pipelineCode", getPipelineCode())
                .add("version", getVersion())
                .add("scripts", getScripts())
                .add("published", getPublished())
                .add("publishedBy", getPublishedBy())
                .toString();
    }

    public org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder copy() {
        return builder().copy(this);
    }

    public static org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder builder() {
        return new org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder();
    }

    public static class Builder {
        private String pipelineCode;
        private String version;
        private List<PublishedScript> scripts;
        private Instant published;
        private String publishedBy;

        public org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder pipelineCode(final String pipelineCode) {
            this.pipelineCode = pipelineCode;
            return this;
        }

        public org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder version(final String version) {
            this.version = version;
            return this;
        }

        public org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder scripts(final List<PublishedScript> scripts) {
            this.scripts = scripts != null ? copyOf(scripts) : null;
            return this;
        }

        public org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder published(final Instant published) {
            this.published = published;
            return this;
        }

        public org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder publishedBy(final String publishedBy) {
            this.publishedBy = publishedBy;
            return this;
        }

        public org.opentestsystem.rdw.script.publishing.PublishedPipeline.Builder copy(final org.opentestsystem.rdw.script.publishing.PublishedPipeline pipeline) {
            return pipelineCode(pipeline.getPipelineCode())
                    .version(pipeline.getVersion())
                    .scripts(pipeline.getScripts())
                    .published(pipeline.getPublished())
                    .publishedBy(pipeline.getPublishedBy());
        }

        public org.opentestsystem.rdw.script.publishing.PublishedPipeline build() {
            final org.opentestsystem.rdw.script.publishing.PublishedPipeline pipeline = new org.opentestsystem.rdw.script.publishing.PublishedPipeline();
            pipeline.pipelineCode = pipelineCode;
            pipeline.version = version;
            pipeline.scripts = scripts != null ? scripts : of();
            pipeline.published = published;
            pipeline.publishedBy = publishedBy;
            return pipeline;
        }

    }

}