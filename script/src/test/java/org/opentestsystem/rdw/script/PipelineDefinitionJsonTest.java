package org.opentestsystem.rdw.script;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Before;
import org.junit.Test;

import static java.util.Collections.singletonList;
import static org.hamcrest.CoreMatchers.hasItem;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

public class PipelineDefinitionJsonTest {
    private PipelineDefinition pipelineDefinition;
    private ScriptDefinition nodeDefinition;
    private final ObjectMapper objectMapper = new ObjectMapper()
            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);


    @Before
    public void setUp() {
        nodeDefinition = ScriptDefinition.builder()
                .name("exam_script")
                .version("1.0")
                .userCreated(true)
                .build();
        pipelineDefinition = PipelineDefinition.builder()
                .name("Exam Pipeline")
                .version("1.0")
                .scripts(singletonList(nodeDefinition))
                .build();
    }

    @Test
    public void marshallUnmarshallTest() throws Exception {
        final String serialized = objectMapper.writeValueAsString(pipelineDefinition);
        final PipelineDefinition deserialized = objectMapper.readValue(serialized, PipelineDefinition.class);

        assertThat(deserialized.getName(), is(pipelineDefinition.getName()));
        assertThat(deserialized.getVersion(), is(pipelineDefinition.getVersion()));
        assertThat(deserialized.getScripts().size(), is(1));
        assertThat(deserialized.getScripts(), hasItem(nodeDefinition));
    }
}