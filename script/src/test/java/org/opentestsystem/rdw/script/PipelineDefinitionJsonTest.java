package org.opentestsystem.rdw.script;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.script.publishing.PublishedPipeline;
import org.opentestsystem.rdw.script.publishing.PublishedScript;
import org.opentestsystem.rdw.script.publishing.ScriptType;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;

public class PipelineDefinitionJsonTest {
    private PipelineDefinition pipelineDefinition;
    private ScriptDefinition nodeDefinition;
    private final ObjectMapper objectMapper = new ObjectMapper()
            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);


    @Before
    public void setUp() {
        nodeDefinition = ScriptDefinition.builder()
                .source(
                        PublishedScript.builder()
                                .type(ScriptType.User)
                                .version("1.0")
                                .body("body")
                                .build()
                )
                .build();
        pipelineDefinition = PipelineDefinition.builder()
                .source(
                        PublishedPipeline.builder()
                                .pipelineCode("code")
                                .version("v")
                                .build()
                )
                .scripts(newArrayList(nodeDefinition))
                .build();
    }

    @Test
    public void marshallUnmarshallTest() throws Exception {
        final String serialized = objectMapper.writeValueAsString(pipelineDefinition);
        final PipelineDefinition deserialized = objectMapper.readValue(serialized, PipelineDefinition.class);

        assertThat(deserialized)
                .isEqualToComparingFieldByFieldRecursively(pipelineDefinition);
    }
}