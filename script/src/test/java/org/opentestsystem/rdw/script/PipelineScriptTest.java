package org.opentestsystem.rdw.script;

import com.google.common.collect.ImmutableMap;
import org.junit.Before;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

public class PipelineScriptTest {
    PipelineScript pipelineScript;

    @Before
    public void setUp() throws Exception {
        pipelineScript = new PipelineScript() {
            @Override
            public Object run() {
                return "OK";
            }
        };
    }

    @Test
    public void itShouldTrackBoundProperties() {
        final Map<String,Object> properties = ImmutableMap.of("propA", "stringValue", "propB", 11, "propC", true);
        pipelineScript.bindProperties(properties);
        assertThat(pipelineScript.getBoundProperties()).isEqualTo(properties);
    }

    @Test
    public void isShouldTrackMultipleBinds() {
        final Map<String,Object> properties1 = ImmutableMap.of("propA", "stringValue", "propB", 11, "propC", true);
        final Map<String,Object> properties2 = ImmutableMap.of("propB", 12, "propD", "anotherStringValue");
        final Map<String,Object> allProperties = new HashMap<>(properties1);
        allProperties.putAll(properties2);

        pipelineScript.bindProperties(properties1);
        pipelineScript.bindProperties(properties2);

        assertThat(pipelineScript.getBoundProperties()).isEqualTo(allProperties);
    }
}