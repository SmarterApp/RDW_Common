package org.opentestsystem.rdw.security;

import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.Objects;

import static com.google.common.base.Preconditions.checkArgument;
import static com.google.common.base.Preconditions.checkNotNull;

/**
 * This class represents a single grant found in the tenancy chain provided by ART during authentication.
 * The levels of granularity consist of the following in order of low to high granularity:
 * CLIENT (one or more tenancies)
 * GROUP OF STATES (one or more states)
 * STATE (single state)
 * GROUP OF DISTRICTS (one or more districts)
 * DISTRICT (single district)
 * GROUP OF INSTITUTIONS (one or more institutions)
 * INSTITUTION (single institution)
 *
 * When an entity of high granularity is specified all preceding levels of granularity are included in the grant
 * to fully qualify the entity ID. The only time this is not the case is when the role is not enabled for the entity level
 * in the permission management system.
 */
public class Grant implements Serializable {

	/**
	 * The ID of the entity for which a role is being granted
	 */
	private String entityId;

	/**
	 * The role being granted
	 */
	private String role;

	/**
	 * The scope of access granted for the role-entity combination
	 * (e.g. STATE, DISTRICT, INSTITUTION)
	 */
	private EntityLevel entityLevel;

	/**
	 * A client account ID to which one or more tenancies may be associated.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String clientId;

	/**
	 * The name of the client account.  Always present when the ID is present.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String clientName;

	/**
	 * A state group ID to which one or more states may be associated.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String stateGroupId;

	/**
	 * The state group name for the state group ID.  Always present when the ID is present.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String stateGroupName;

	/**
	 * A state ID
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String stateId;

	/**
	 * The state name for the state ID. Always present when the ID is present.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String stateName;

	/**
	 * A district group ID to which one or more districts may be associated.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String districtGroupId;

	/**
	 * The district group name for the district group ID.  Always present when the ID is present.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String districtGroupName;

	/**
	 * A district ID
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String districtId;

	/**
	 * The district name for the district ID. Always present when the ID is present.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String districtName;

	/**
	 * An institution group ID to which one or more states may be associated.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String institutionGroupId;

	/**
	 * The institution group name for the institution group ID.  Always present when the ID is present.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String institutionGroupName;

	/**
	 * An institution ID
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String institutionId;

	/**
	 * The institution name for the institution ID. Always present when the ID is present.
	 * This may be null if the permission for the entity level is not enabled for this role.
	 */
	private String institutionName;

	public Grant(
		final @NotNull String entityId,
		final @NotNull String role,
		final @NotNull EntityLevel entityLevel,
		final String clientId,
		final String clientName,
		final String stateGroupId,
		final String stateGroupName,
		final String stateId,
		final String stateName,
		final String districtGroupId,
		final String districtGroupName,
		final String districtId,
		final String districtName,
		final String institutionGroupId,
		final String institutionGroupName,
		final String institutionId,
		final String institutionName) {
		this.entityId = checkNotNull(entityId, "entity ID must not be null");
		this.role = checkNotNull(role, "role must not be null");
		this.entityLevel = checkNotNull(entityLevel, "entity level must not be null");
		this.clientId = clientId;
		this.clientName = clientName;
		this.stateGroupId = stateGroupId;
		this.stateGroupName = stateGroupName;
		this.stateId = stateId;
		this.stateName = stateName;
		this.districtGroupId = districtGroupId;
		this.districtGroupName = districtGroupName;
		this.districtId = districtId;
		this.districtName = districtName;
		this.institutionGroupId = institutionGroupId;
		this.institutionGroupName = institutionGroupName;
		this.institutionId = institutionId;
		this.institutionName = institutionName;

		if (entityLevel == EntityLevel.CLIENT) {
			checkArgument(entityId.equals(clientId),
				"entity ID must equal the client ID when entity level is set to CLIENT");
		} else if (entityLevel == EntityLevel.STATE) {
			checkArgument(entityId.equals(stateId),
				"entity ID must equal the state ID when entity level is set to STATE");
		} else if (entityLevel == EntityLevel.DISTRICT) {
			checkArgument(entityId.equals(districtId),
				"entity ID must equal the district ID when entity level is set to DISTRICT");
		} else if (entityLevel == EntityLevel.INSTITUTION) {
			checkArgument(entityId.equals(institutionId),
				"entity ID must equal the institution ID when entity level is set to INSTITUTION");
		}
	}

	public String getEntityId() {
		return entityId;
	}

	public String getRole() {
		return role;
	}

	public EntityLevel getEntityLevel() {
		return entityLevel;
	}

	public String getClientId() {
		return clientId;
	}

	public String getClientName() {
		return clientName;
	}

	public String getStateGroupId() {
		return stateGroupId;
	}

	public String getStateGroupName() {
		return stateGroupName;
	}

	public String getStateId() {
		return stateId;
	}

	public String getStateName() {
		return stateName;
	}

	public String getDistrictGroupId() {
		return districtGroupId;
	}

	public String getDistrictGroupName() {
		return districtGroupName;
	}

	public String getDistrictId() {
		return districtId;
	}

	public String getDistrictName() {
		return districtName;
	}

	public String getInstitutionGroupId() {
		return institutionGroupId;
	}

	public String getInstitutionGroupName() {
		return institutionGroupName;
	}

	public String getInstitutionId() {
		return institutionId;
	}

	public String getInstitutionName() {
		return institutionName;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null || getClass() != obj.getClass()) return false;
		final Grant other = (Grant) obj;
		return Objects.equals(entityId, other.entityId)
			&& Objects.equals(role, other.role);
	}

	@Override
	public int hashCode() {
		return Objects.hash(entityId, role);
	}

	/**
	 * Enumerates all of the different entity access control levels
	 */
	public enum EntityLevel {

		CLIENT(0),
		STATE(1),
		DISTRICT(2),
		INSTITUTION(3);

		/**
		 * The level of granularity or specificity of an entity
		 * (e.g. districts are more granular than states)
		 * This value is used to determine grant containership
		 */
		private int granularity;

		EntityLevel(final int granularity) {
			this.granularity = granularity;
		}

		public int getGranularity() {
			return granularity;
		}

	}

	public static Builder builder() {
		return new Builder();
	}

	public static final class Builder {

		private String entityId;
		private String role;
		private EntityLevel entityLevel;
		private String clientId;
		private String clientName;
		private String stateGroupId;
		private String stateGroupName;
		private String stateId;
		private String stateName;
		private String districtGroupId;
		private String districtGroupName;
		private String districtId;
		private String districtName;
		private String institutionGroupId;
		private String institutionGroupName;
		private String institutionId;
		private String institutionName;

		public Builder entityId(String entityId) {
			this.entityId = entityId;
			return this;
		}

		public Builder role(String role) {
			this.role = role;
			return this;
		}

		public Builder entityLevel(EntityLevel entityLevel) {
			this.entityLevel = entityLevel;
			return this;
		}

		public Builder clientId(String clientId) {
			this.clientId = clientId;
			return this;
		}

		public Builder clientName(String clientName) {
			this.clientName = clientName;
			return this;
		}

		public Builder stateGroupId(String stateGroupId) {
			this.stateGroupId = stateGroupId;
			return this;
		}

		public Builder stateGroupName(String stateGroupName) {
			this.stateGroupName = stateGroupName;
			return this;
		}

		public Builder stateId(String stateId) {
			this.stateId = stateId;
			return this;
		}

		public Builder stateName(String stateName) {
			this.stateName = stateName;
			return this;
		}

		public Builder districtGroupId(String districtGroupId) {
			this.districtGroupId = districtGroupId;
			return this;
		}

		public Builder districtGroupName(String districtGroupName) {
			this.districtGroupName = districtGroupName;
			return this;
		}

		public Builder districtId(String districtId) {
			this.districtId = districtId;
			return this;
		}

		public Builder districtName(String districtName) {
			this.districtName = districtName;
			return this;
		}

		public Builder institutionGroupId(String institutionGroupId) {
			this.institutionGroupId = institutionGroupId;
			return this;
		}

		public Builder institutionGroupName(String institutionGroupName) {
			this.institutionGroupName = institutionGroupName;
			return this;
		}

		public Builder institutionId(String institutionId) {
			this.institutionId = institutionId;
			return this;
		}

		public Builder institutionName(String institutionName) {
			this.institutionName = institutionName;
			return this;
		}

		public Grant build() {
			return new Grant(
				entityId,
				role,
				entityLevel,
				clientId,
				clientName,
				stateGroupId,
				stateGroupName,
				stateId,
				stateName,
				districtGroupId,
				districtGroupName,
				districtId,
				districtName,
				institutionGroupId,
				institutionGroupName,
				institutionId,
				institutionName
			);
		}

	}

}
