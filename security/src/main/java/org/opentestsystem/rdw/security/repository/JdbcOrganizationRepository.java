package org.opentestsystem.rdw.security.repository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.Collection;
import java.util.Map;

import static com.google.common.collect.Maps.newHashMap;

@Repository
public class JdbcOrganizationRepository implements OrganizationRepository {

    @Value("${sql.districtGroup.findAllIds}")
    private String sqlFindAllDistrictGroupIds;

    @Value("${sql.district.findAllIds}")
    private String sqlFindAllDistrictIds;

    @Value("${sql.schoolGroup.findAllIds}")
    private String sqlFindAllSchoolGroupIds;

    @Value("${sql.school.findAllIds}")
    private String sqlFindAllSchoolIds;

    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Autowired
    public JdbcOrganizationRepository(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    public Map<String, Long> findAllDistrictGroupIds(final Collection<String> naturalIds) {
        return findAllIds(sqlFindAllDistrictGroupIds, naturalIds);
    }

    @Override
    public Map<String, Long> findAllDistrictIds(final Collection<String> naturalIds) {
        return findAllIds(sqlFindAllDistrictIds, naturalIds);
    }

    @Override
    public Map<String, Long> findAllSchoolGroupIds(final Collection<String> naturalIds) {
        return findAllIds(sqlFindAllSchoolGroupIds, naturalIds);
    }

    @Override
    public Map<String, Long> findAllSchoolIds(final Collection<String> naturalIds) {
        return findAllIds(sqlFindAllSchoolIds, naturalIds);
    }

    private Map<String, Long> findAllIds(final String findAllIdsQuery, final Collection<String> naturalIds) {
        final Map<String, Long> idsByNaturalId = newHashMap();

        if (naturalIds != null && !naturalIds.isEmpty()) {
            jdbcTemplate.query(findAllIdsQuery, new MapSqlParameterSource("naturalIds", naturalIds), row -> {
                idsByNaturalId.put(row.getString("natural_id"), row.getLong("id"));
            });
        }

        return idsByNaturalId;
    }
}
