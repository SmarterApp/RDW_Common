package org.opentestsystem.rdw.security;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import java.io.IOException;

import static org.assertj.core.api.Assertions.assertThat;

public class PermissionTest {

    @Test
    public void itShouldPreserveConstructorValues() {
        final Permission permission = new Permission("GENERAL", PermissionScope.STATEWIDE);
        assertThat(permission.getId()).isEqualTo("GENERAL");
        assertThat(permission.getScope()).isEqualTo(PermissionScope.STATEWIDE);
    }

    @Test(expected = RuntimeException.class)
    public void itRequiresAnId() {
        new Permission(null, PermissionScope.STATEWIDE);
    }

    @Test(expected = RuntimeException.class)
    public void itRequireAScope() {
        new Permission("GENERAL", null);
    }

    @Test
    public void itShouldSerialize() throws IOException {
        final ObjectMapper mapper = new ObjectMapper();

        final String value = mapper.writeValueAsString(new Permission("GENERAL", PermissionScope.STATEWIDE));

        final Permission unwrapped = mapper.readValue(value, Permission.class);
        assertThat(unwrapped.getId()).isEqualTo("GENERAL");
        assertThat(unwrapped.getScope().isStatewide()).isTrue();
    }
}
