package org.opentestsystem.rdw.common.status;

import com.google.common.collect.ImmutableMap;
import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.multitenant.Tenant;
import org.opentestsystem.rdw.multitenant.TenantProperties;

import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

public class TenantsStatusIndicatorTest {

    private TenantsStatusIndicator statusIndicator;

    @Before
    public void createStatusIndicator() {
        final TenantProperties tenantProperties = new TenantProperties();
        tenantProperties.setTenants(ImmutableMap.of(
            "CA", Tenant.builder().id("CA").key("CA").name("California").build(),
            "NV", Tenant.builder().id("NV").key("NV").name("Nevada").build()
        ));

        statusIndicator = new TenantsStatusIndicator(tenantProperties);
    }

    @Test
    public void itShouldReturnItsName() {
        assertThat(statusIndicator.name()).isEqualTo("tenants");
    }

    @Test
    public void itShouldBeConfigurationLevel() {
        assertThat(statusIndicator.doLevelCheck(1)).isFalse();
        assertThat(statusIndicator.doLevelCheck(2)).isTrue();
    }

    @Test
    public void itShouldUseEndpointsToGetDetails() {
        final Status status = statusIndicator.status(2);

        assertThat(status.getStatusRating()).isEqualTo(4);
        final Map<String, Object> tenantProperties = (Map<String, Object>) status.getDetails().get("tenant-properties");
        assertThat(tenantProperties).hasSize(2);
        assertThat(tenantProperties.keySet()).contains("CA", "NV");
    }
}
